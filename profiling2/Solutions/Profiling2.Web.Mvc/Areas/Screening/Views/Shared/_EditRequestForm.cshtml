@using Profiling2.Web.Mvc.Areas.Screening.Controllers.ViewModels
@using Profiling2.Domain.Scr.Attach
@model RequestViewModel

@Html.HiddenFor(x => x.Id)
<fieldset>
  <div class="control-group">
    <label class="control-label">Reference #</label>
    <div class="controls">
      @Html.HiddenFor(x => x.ReferenceNumber)
      <span class="uneditable-input">@Model.ReferenceNumber</span>
    </div>
  </div>
  <div class="control-group">
    <label class="control-label">Type *</label>
    <div class="controls">
      @Html.DropDownListFor(x => x.RequestTypeID, Model.RequestTypes, new { @class = "input-xxlarge" })
    </div>
  </div>
  <div class="control-group">
    <label class="control-label">Name *</label>
    <div class="controls">
      @Html.TextBoxFor(x => x.RequestName, new { @class = "input-xxlarge" })
    </div>
  </div>
  <div class="control-group">
    <label class="control-label">Description</label>
    <div class="controls">
      @Html.TextAreaFor(x => x.Notes, new { @class = "input-xxlarge" })
    </div>
  </div>
  <div class="control-group">
    <label class="control-label">Requesting Entity *</label>
    <div class="controls">
      @Html.HiddenFor(x => x.RequestEntityID)
      <span class="uneditable-input input-xxlarge">@Model.RequestEntities.First(x => x.Value == Model.RequestEntityID.ToString()).Text</span>
    </div>
  </div>
  <div class="control-group">
    <label class="control-label">Respond By</label>
    <div class="controls">
      <div class="input-append">
        @Html.TextBoxFor(x => x.RespondBy, new { @readonly = true, style = "cursor: pointer; background-color: #ffffff;" })
        <span class="add-on"><i class="icon-calendar"></i></span>
      </div>
    </div>
  </div>
  <div class="control-group">
    <label class="control-label">Respond Immediately?</label>
    <div class="controls">
        @Html.CheckBoxFor(x => x.RespondImmediately)
    </div>
  </div>

  <div class="control-group">
    <label class="control-label">
      @Html.ActionLink("Attachments", "Index", "Attachments", new { requestId = Model.Id, area = "Screening" }, new { @class = "btn btn-mini" })
    </label>
    <div class="controls">
      @if (Model.RequestAttachments != null && Model.RequestAttachments.Where(x => !x.Archive).Any())
      {
        <ul>
          @foreach (RequestAttachment ra in Model.RequestAttachments.Where(x => !x.Archive))
          {
            <li>
              @Html.ActionLink(ra.Attachment.FileName, "Download", "Attachments", new { area = "Screening", requestId = ra.Request.Id, id = ra.Attachment.Id }, null)
              @if (ra.Archive)
              {
                  @:&nbsp;<span class="label">removed</span>
              }
            </li>
          }
        </ul>
      }
      else
      {
        <span class="help-inline">There are no attachments.</span>
      }
    </div>
  </div>
</fieldset>
