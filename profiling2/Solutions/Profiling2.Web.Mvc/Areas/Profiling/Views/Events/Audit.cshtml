@using System.Collections
@using NHibernate.Envers
@using Profiling2.Domain
@using Profiling2.Domain.DTO
@using Profiling2.Domain.Prf
@using Profiling2.Domain.Prf.Persons
@using KellermanSoftware.CompareNetObjects
@{
  ViewBag.Title = "Audit Trail: Event (ID=" + ViewBag.Event.Id + ")";
  IList<AdminUser> Users = ((IList<AdminUser>)ViewBag.Users);
}

<h2>Audit Trail: Event (ID=@(ViewBag.Event.Id))</h2>

<hr />

@if (ViewBag.Event.IsApproved())
{
    <div class="alert alert-info">
        This event was <strong>approved</strong>
        @if (ViewBag.Event.EventApprovals[0].ApprovalDateTime != DateTime.MinValue)
        {
            <text>on @string.Format("{0:dddd dd MMMM yyy HH:mm}", ViewBag.Event.EventApprovals[0].ApprovalDateTime) </text>
        }
        @if (ViewBag.Event.EventApprovals[0].AdminUser != null)
        {
            <text>by @ViewBag.Event.EventApprovals[0].AdminUser</text>
        }
        .
    </div>
}

<table class="table table-condensed table-bordered">
  <thead>
    <tr>
      <th>Who</th>
      <th>When</th>
      <th>What</th>
      <th>Field</th>
      <th>Diff</th>
    </tr>
  </thead>
  <tbody>
    @foreach (AuditTrailDTO row in ViewBag.AuditTrail)
    {
      IList<AdminUser> users = Users.Where(x => x.IsUser(row.REVINFO.UserName)).ToList();
      <tr>
        <td style="white-space: nowrap;" title="@(users.Any() ? users.First().UserID : string.Empty)">@(users.Any() ? users.First().UserName : string.Empty)</td>
        <td style="white-space: nowrap;">@string.Format("{0:yyyy/MM/dd HH:mm:ss}", row.REVINFO.REVTSTMP)</td>
        @if (row.Differences.Count > 0)
        {
          <td>@row.RevisionType</td>
          <td style="white-space: nowrap;">@(row.Entity.GetType().Name)(ID=@row.Entity.Id) @row.Differences[0].PropertyName</td>
          <td>
            @Html.DiffOutput(row.Differences[0].Object2Value, row.Differences[0].Object1Value)
          </td>
       row.Differences.RemoveAt(0);
        }
        else
        {
          <td>@row.RevisionType</td>
          <td style="white-space: nowrap;">@(row.Entity.GetType().Name)(ID=@row.Entity.Id)</td>
          <td>@row.Entity</td>
        }
      </tr>
        foreach (Difference d in row.Differences)
        {
        <tr>
          <td colspan="2"></td>
          <td>@row.RevisionType</td>
          <td style="white-space: nowrap;">@(row.Entity.GetType().Name)(ID=@row.Entity.Id) @d.PropertyName</td>
          <td>@Html.DiffOutput(d.Object2Value, d.Object1Value)</td>
        </tr>
        }
    }
  </tbody>
</table>

@if (Profiling2.Infrastructure.Queries.Audit.AuditableExtensions.BASE_REVISION_ID > 1)
{
    <p class="muted">
        <small>1. Event Sources and Event Relationships above will appear as new additions on 6 August 2014, when their audit records were created.</small>
    </p>
}

@if (ViewBag.OldAuditTrail != null && ViewBag.OldAuditTrail.Count > 0)
{
    <hr />

    <table class="table table-condensed table-bordered">
      <thead>
        <tr>
          <th>Who</th>
          <th>When</th>
          <th>What</th>
          <th>Previous Values</th>
          <th>Non Profiling Change</th>
        </tr>
      </thead>
      <tbody>
        @foreach (ChangeActivityDTO dto in ViewBag.OldAuditTrail)
        {
          IList<AdminUser> users = Users.Where(x => x.IsUser(dto.Who)).ToList();
          <tr @(DateTime.Parse("2013-05-09 11:07") < dto.When ? "class=warning" : string.Empty)>
            <td style="white-space: nowrap;" title="@(users.Any() ? users.First().UserID : string.Empty)">@(users.Any() ? users.First().UserName : string.Empty)</td>
            <td style="white-space: nowrap;">@string.Format("{0:yyyy/MM/dd HH:mm:ss}", dto.When)</td>
            <td style="white-space: nowrap;">@dto.What</td>
            <td>@dto.PreviousValues</td>
            <td>@dto.NonProfilingChange</td>
          </tr>
        }
      </tbody>
    </table>
}