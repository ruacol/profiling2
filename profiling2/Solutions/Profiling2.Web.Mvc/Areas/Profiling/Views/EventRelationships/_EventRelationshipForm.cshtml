@using Profiling2.Web.Mvc.Areas.Profiling.Controllers.ViewModels
@model EventRelationshipViewModel

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-error">
        @Html.ValidationSummary()
    </div>
}

<div id="validation-errors"></div>

<div id="relationship-form-help" class="collapse out">
  @Html.Partial("_EventSearchHelp")
  <p>The format should follow the subject verb object format.  In other words, SUBJECT relationship OBJECT, e.g. Event A is a reprisal for Event B.</p>
  <hr />
</div>

<fieldset>
    @Html.HiddenFor(x => x.Id)
    <div class="control-group">
        <label class="control-label">
            Subject
        </label>
        <div class="controls">
            @Html.HiddenFor(x => x.SubjectEventId, new { @class = "input-xxlarge" })
            <i class="accordion-toggle icon-arrow-left" title="Set current event as the subject event." id="icon-set-as-subject"></i>
            <i class="accordion-toggle icon-info-sign" title="The subject event in the relationship."></i>
        </div>
    </div>
    <div class="control-group">
        <label class="control-label">
            Relationship
        </label>
        <div class="controls">
            @Html.DropDownListFor(x => x.EventRelationshipTypeId, Model.EventRelationshipTypeList, string.Empty)
            <i class="accordion-toggle icon-info-sign" title="The relationship between the subject and object events."></i>
        </div>
    </div>
    <div class="control-group">
        <label class="control-label">
            Object
        </label>
        <div class="controls">
            @Html.HiddenFor(x => x.ObjectEventId, new { @class = "input-xxlarge" })
            <i class="accordion-toggle icon-arrow-left" title="Set current event as the object event." id="icon-set-as-object"></i>
            <i class="accordion-toggle icon-info-sign" title="The object event in the relationship."></i>
        </div>
    </div>
    <div class="control-group">
        <label class="control-label">Start Date</label>
        <div class="controls">
            <span class="muted">Year</span> @Html.TextBoxFor(x => x.YearOfStart, new { @class = "input-mini" })
            <span class="muted">Month</span> @Html.TextBoxFor(x => x.MonthOfStart, new { @class = "input-mini" })
            <span class="muted">Day</span> @Html.TextBoxFor(x => x.DayOfStart, new { @class = "input-mini" })
            <i class="accordion-toggle icon-info-sign" title="The date (yyyy-mm-dd) when this relationship started.  If parts of the date are not known, they can be left blank, for example 2009 - - 29."></i>
        </div>
    </div>
    <div class="control-group">
        <label class="control-label">End Date</label>
        <div class="controls">
            <span class="muted">Year</span> @Html.TextBoxFor(x => x.YearOfEnd, new { @class = "input-mini" })
            <span class="muted">Month</span> @Html.TextBoxFor(x => x.MonthOfEnd, new { @class = "input-mini" })
            <span class="muted">Day</span> @Html.TextBoxFor(x => x.DayOfEnd, new { @class = "input-mini" })
            <i class="accordion-toggle icon-info-sign" title="The date (yyyy-mm-dd) when this relationship ended.  If parts of the date are not known, they can be left blank, for example 2009 - - 29."></i>
        </div>
    </div>
    <div class="control-group">
        <label class="control-label">Notes</label>
        <div class="controls">
            @Html.TextAreaFor(x => x.Notes, new { @class = "input-xxlarge" })
            <i class="accordion-toggle icon-info-sign" title="Notes about this relationship."></i>
        </div>
    </div>
</fieldset>
